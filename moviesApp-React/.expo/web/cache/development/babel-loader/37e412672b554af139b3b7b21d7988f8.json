{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport * as Animatable from 'react-native-animatable';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { withNavigation } from 'react-navigation';\nimport { Context } from \"../context/movieContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AnimatedIcon = Animatable.createAnimatableComponent(Icon);\nvar colors = {\n  transparent: 'transparent',\n  white: '#fff',\n  heartColor: '#e92f3c',\n  textPrimary: '#fff',\n  black: '#000'\n};\nvar ResultsDetail = function ResultsDetail(_ref) {\n  var result = _ref.result,\n    navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    liked = _useState2[0],\n    setLiked = _useState2[1];\n  var _useContext = useContext(Context),\n    state = _useContext.state;\n  var checkLiked = function checkLiked(id) {\n    if (result.imdbID === state.id) {\n      return true, _readOnlyError(\"liked\");\n    }\n    ;\n  };\n  return _jsxs(ImageBackground, {\n    source: {\n      uri: result.Poster\n    },\n    style: styles.cardbg,\n    children: [_jsx(View, {\n      style: styles.card,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Show', {\n            id: result.imdbID\n          });\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress(id) {\n        setLiked(!liked);\n        navigation.navigate('Show', {\n          id: result.imdbID\n        });\n      },\n      children: _jsx(AnimatedIcon, {\n        name: checkLiked(result.imdbID) ? 'heart' : 'hearto',\n        color: checkLiked(result.imdbID) ? colors.heartColor : colors.textPrimary,\n        size: 18,\n        style: styles.icon\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 200,\n    height: 300,\n    borderRadius: 4\n  },\n  card: {\n    width: 200,\n    paddingLeft: 5,\n    paddingRight: 5,\n    backgroundColor: '#fff',\n    flexDirection: 'column',\n    marginLeft: 5\n  },\n  cardbg: {\n    width: 200,\n    height: 300,\n    paddingLeft: 5,\n    paddingRight: 5,\n    backgroundColor: '#fff',\n    flexDirection: 'column',\n    marginLeft: 5\n  },\n  imageSection: {\n    alignItems: 'center',\n    flex: 2\n  },\n  contentSection: {\n    flex: 2,\n    paddingLeft: 2\n  },\n  title: {\n    fontSize: 14\n  },\n  icon: {\n    fontSize: 20,\n    textAlign: 'right'\n  },\n  animatedIcon: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n    borderRadius: 160,\n    opacity: 0\n  }\n});\nexport default withNavigation(ResultsDetail);","map":{"version":3,"names":["React","useContext","useState","Animatable","Icon","withNavigation","Context","AnimatedIcon","createAnimatableComponent","colors","transparent","white","heartColor","textPrimary","black","ResultsDetail","result","navigation","liked","setLiked","state","checkLiked","id","imdbID","uri","Poster","styles","cardbg","card","navigate","icon","StyleSheet","create","image","width","height","borderRadius","paddingLeft","paddingRight","backgroundColor","flexDirection","marginLeft","imageSection","alignItems","flex","contentSection","title","fontSize","textAlign","animatedIcon","position","justifyContent","zIndex","opacity"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/components/ResultsDetails.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable' \r\nimport Icon from 'react-native-vector-icons/AntDesign'\r\nimport { withNavigation } from 'react-navigation';\r\nimport { Context } from '../context/movieContext';\r\nconst AnimatedIcon = Animatable.createAnimatableComponent(Icon)\r\n  const colors = {\r\n  transparent: 'transparent',\r\n  white: '#fff',\r\n  heartColor: '#e92f3c',\r\n  textPrimary: '#fff',\r\n  black: '#000', \r\n}\r\nconst ResultsDetail = ({ result, navigation }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const { state } = useContext(Context)\r\n\r\n  const checkLiked = (id) => {\r\n    if (result.imdbID === state.id) {\r\n      return liked = true;\r\n    };\r\n  }\r\n  return (\r\n    <ImageBackground source={{ uri: result.Poster }} style={styles.cardbg}>\r\n    <View style={styles.card}>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Show', { id: result.imdbID })}>\r\n      </TouchableOpacity>\r\n    </View>\r\n    <TouchableOpacity\r\n        onPress={(id) =>{\r\n          setLiked(!liked);\r\n          navigation.navigate('Show', { id: result.imdbID })\r\n        } }>\r\n      <AnimatedIcon\r\n              name={checkLiked(result.imdbID) ? 'heart' : 'hearto'}\r\n              color={checkLiked(result.imdbID) ? colors.heartColor : colors.textPrimary}\r\n              size={18}\r\n              style={styles.icon}\r\n            />\r\n    </TouchableOpacity>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 200,\r\n    height: 300,\r\n    borderRadius: 4,\r\n  },\r\n  card: {\r\n    width:200,\r\n    paddingLeft: 5,\r\n    paddingRight:5,\r\n    backgroundColor: '#fff',\r\n    flexDirection: 'column',\r\n    marginLeft: 5,\r\n  },\r\n  cardbg: {\r\n    width:200,\r\n    height:300,\r\n    paddingLeft: 5,\r\n    paddingRight:5,\r\n    backgroundColor: '#fff',\r\n    flexDirection: 'column',\r\n    marginLeft: 5,\r\n  },\r\n  imageSection: {\r\n    alignItems: 'center',\r\n    flex: 2,\r\n  },\r\n  contentSection: {\r\n    flex: 2,\r\n    paddingLeft: 2,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n    textAlign: 'right',\r\n  },\r\n    animatedIcon: {\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 2,\r\n    borderRadius: 160,\r\n    opacity: 0\r\n  }\r\n});\r\n\r\nexport default withNavigation(ResultsDetail);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAOlD,OAAO,KAAKC,UAAU,MAAM,yBAAyB;AACrD,OAAOC,IAAI;AACX,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO;AAAkC;AAAA;AAClD,IAAMC,YAAY,GAAGJ,UAAU,CAACK,yBAAyB,CAACJ,IAAI,CAAC;AAC7D,IAAMK,MAAM,GAAG;EACfC,WAAW,EAAE,aAAa;EAC1BC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,SAAS;EACrBC,WAAW,EAAE,MAAM;EACnBC,KAAK,EAAE;AACT,CAAC;AACD,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAA+B;EAAA,IAAzBC,MAAM,QAANA,MAAM;IAAEC,UAAU,QAAVA,UAAU;EACzC,gBAA0Bf,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlCgB,KAAK;IAAEC,QAAQ;EACtB,kBAAkBlB,UAAU,CAACK,OAAO,CAAC;IAA7Bc,KAAK,eAALA,KAAK;EAEb,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,EAAE,EAAK;IACzB,IAAIN,MAAM,CAACO,MAAM,KAAKH,KAAK,CAACE,EAAE,EAAE;MAC9B,OAAe,IAAI;IACrB;IAAC;EACH,CAAC;EACD,OACE,MAAC,eAAe;IAAC,MAAM,EAAE;MAAEE,GAAG,EAAER,MAAM,CAACS;IAAO,CAAE;IAAC,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAA,WACtE,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,IAAK;MAAA,UACvB,KAAC,gBAAgB;QACf,OAAO,EAAE;UAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,MAAM,EAAE;YAAEP,EAAE,EAAEN,MAAM,CAACO;UAAO,CAAC,CAAC;QAAA;MAAC;IACjD,EACd,EACP,KAAC,gBAAgB;MACb,OAAO,EAAE,iBAACD,EAAE,EAAI;QACdH,QAAQ,CAAC,CAACD,KAAK,CAAC;QAChBD,UAAU,CAACY,QAAQ,CAAC,MAAM,EAAE;UAAEP,EAAE,EAAEN,MAAM,CAACO;QAAO,CAAC,CAAC;MACpD,CAAG;MAAA,UACL,KAAC,YAAY;QACL,IAAI,EAAEF,UAAU,CAACL,MAAM,CAACO,MAAM,CAAC,GAAG,OAAO,GAAG,QAAS;QACrD,KAAK,EAAEF,UAAU,CAACL,MAAM,CAACO,MAAM,CAAC,GAAGd,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACI,WAAY;QAC1E,IAAI,EAAE,EAAG;QACT,KAAK,EAAEa,MAAM,CAACI;MAAK;IACnB,EACS;EAAA,EACD;AAEtB,CAAC;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/BC,KAAK,EAAE;IACLC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE;EAChB,CAAC;EACDR,IAAI,EAAE;IACJM,KAAK,EAAC,GAAG;IACTG,WAAW,EAAE,CAAC;IACdC,YAAY,EAAC,CAAC;IACdC,eAAe,EAAE,MAAM;IACvBC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDd,MAAM,EAAE;IACNO,KAAK,EAAC,GAAG;IACTC,MAAM,EAAC,GAAG;IACVE,WAAW,EAAE,CAAC;IACdC,YAAY,EAAC,CAAC;IACdC,eAAe,EAAE,MAAM;IACvBC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDC,YAAY,EAAE;IACZC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE;EACR,CAAC;EACDC,cAAc,EAAE;IACdD,IAAI,EAAE,CAAC;IACPP,WAAW,EAAE;EACf,CAAC;EACDS,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDjB,IAAI,EAAE;IACJiB,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACCC,YAAY,EAAE;IACdC,QAAQ,EAAE,UAAU;IACpBC,cAAc,EAAE,QAAQ;IACxBR,UAAU,EAAE,QAAQ;IACpBS,MAAM,EAAE,CAAC;IACThB,YAAY,EAAE,GAAG;IACjBiB,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAehD,cAAc,CAACU,aAAa,CAAC"},"metadata":{},"sourceType":"module"}