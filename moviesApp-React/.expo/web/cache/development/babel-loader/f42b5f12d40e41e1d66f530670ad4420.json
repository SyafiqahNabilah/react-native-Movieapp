{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nvar omdb = axios.create({\n  baseURL: 'http://www.omdbapi.com/?apikey=a091d52e'\n});\nexport var searchApi = function () {\n  var _ref = _asyncToGenerator(function* (searchTerm) {\n    try {\n      var response = yield omdb.get(\"\", {\n        params: {\n          limit: 50,\n          s: searchTerm\n        }\n      });\n      return response.data.Search;\n    } catch (err) {\n      return console.log(\"Something went wrong\");\n      ;\n    }\n  });\n  return function searchApi(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","omdb","create","baseURL","searchApi","searchTerm","response","get","params","limit","s","data","Search","err","console","log"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/api/omdb.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst omdb = axios.create({\r\n  baseURL: 'http://www.omdbapi.com/?apikey=a091d52e'\r\n})\r\n\r\nexport const searchApi = async (searchTerm) => {\r\n  try {\r\n    const response = await omdb.get(\"\", {\r\n      params: {\r\n        limit: 50,\r\n        s: searchTerm\r\n      },\r\n    });\r\n    return response.data.Search; //RAML object\r\n  } catch (err) {\r\n    return console.log(\"Something went wrong\");;\r\n  }\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACxBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,IAAMC,SAAS;EAAA,6BAAG,WAAOC,UAAU,EAAK;IAC7C,IAAI;MACF,IAAMC,QAAQ,SAASL,IAAI,CAACM,GAAG,CAAC,EAAE,EAAE;QAClCC,MAAM,EAAE;UACNC,KAAK,EAAE,EAAE;UACTC,CAAC,EAAEL;QACL;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACK,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAOC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAAC;IAC7C;EACF,CAAC;EAAA,gBAZYX,SAAS;IAAA;EAAA;AAAA,GAYrB"},"metadata":{},"sourceType":"module"}