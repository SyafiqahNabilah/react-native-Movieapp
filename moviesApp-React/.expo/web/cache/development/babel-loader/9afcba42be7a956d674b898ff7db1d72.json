{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ResultsDetail from \"./ResultsDetails\";\nimport { Context } from \"../context/movieContext\";\nimport jsonServer from \"../api/jsonServer\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ResultsList = function ResultsList(_ref) {\n  var results = _ref.results,\n    searchTerm = _ref.searchTerm;\n  var _useContext = useContext(Context),\n    state = _useContext.state,\n    getMovies = _useContext.getMovies;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    movies = _useState2[0],\n    setMovies = _useState2[1];\n  var getMovie = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setMovies(yield getMovies());\n    });\n    return function getMovie() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMovie();\n  }, []);\n  var liked = function liked(imdbID) {\n    if (movies) {\n      return movies.find(function (item) {\n        return console.log(item.content.imdbID === imdbID);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Search result: \", searchTerm]\n    }), _jsx(FlatList, {\n      data: results,\n      style: styles.row,\n      numColumns: 2,\n      keyExtractor: function keyExtractor(movies) {\n        return movies.imdbID;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(ResultsDetail, {\n          result: item,\n          liked: liked(item.imdbID)\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 14,\n    marginBottom: 5,\n    marginLeft: 5\n  },\n  container: {\n    flex: 2,\n    width: '100%'\n  },\n  row: {\n    width: '100%'\n  }\n});\nexport default ResultsList;","map":{"version":3,"names":["React","useContext","useEffect","useState","ResultsDetail","Context","jsonServer","ResultsList","results","searchTerm","state","getMovies","movies","setMovies","getMovie","liked","imdbID","find","item","console","log","content","styles","container","title","row","StyleSheet","create","fontSize","marginBottom","marginLeft","flex","width"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/components/ResultsList.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { View, Text, FlatList, StyleSheet } from \"react-native\";\r\nimport ResultsDetail from \"./ResultsDetails\";\r\nimport { Context } from \"../context/movieContext\";\r\nimport jsonServer from '../api/jsonServer';\r\n\r\nconst ResultsList = ({ results, searchTerm }) => {\r\n  const {state, getMovies} = useContext(Context)\r\n  const [movies, setMovies] = useState([])\r\n\r\n  const getMovie = async() => {\r\n    setMovies( await getMovies());\r\n  };\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n\r\n  const liked = (imdbID) =>{\r\n    if(movies){\r\n          return movies.find(item => {\r\n           return console.log(item.content.imdbID === imdbID);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Search result: {searchTerm}</Text>\r\n      <FlatList\r\n        data={results}\r\n        style={styles.row}\r\n        numColumns= {2}\r\n        keyExtractor={(movies) => movies.imdbID}\r\n        renderItem={({ item }) => {\r\n\r\n          return (\r\n              <ResultsDetail result={item} liked={liked(item.imdbID)} />\r\n          );\r\n        }}\r\n      /> \r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    marginLeft: 5\r\n  },\r\n  container: {\r\n    flex: 2,\r\n    width: '100%',\r\n  },\r\n  row:{\r\n    width: '100%', \r\n    // alignContent: 'space-between'\r\n  }\r\n});\r\nexport default ResultsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAE7D,OAAOC,aAAa;AACpB,SAASC,OAAO;AAChB,OAAOC,UAAU;AAA0B;AAAA;AAE3C,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAgC;EAAA,IAA1BC,OAAO,QAAPA,OAAO;IAAEC,UAAU,QAAVA,UAAU;EACxC,kBAA2BR,UAAU,CAACI,OAAO,CAAC;IAAvCK,KAAK,eAALA,KAAK;IAAEC,SAAS,eAATA,SAAS;EACvB,gBAA4BR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCS,MAAM;IAAEC,SAAS;EAExB,IAAMC,QAAQ;IAAA,8BAAG,aAAW;MAC1BD,SAAS,OAAQF,SAAS,EAAE,CAAC;IAC/B,CAAC;IAAA,gBAFKG,QAAQ;MAAA;IAAA;EAAA,GAEb;EACDZ,SAAS,CAAC,YAAM;IACdY,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,MAAM,EAAI;IACvB,IAAGJ,MAAM,EAAC;MACJ,OAAOA,MAAM,CAACK,IAAI,CAAC,UAAAC,IAAI,EAAI;QAC1B,OAAOC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAACL,MAAM,KAAKA,MAAM,CAAC;MACrD,CAAC,CAAC;IACN;EACF,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEM,MAAM,CAACC,SAAU;IAAA,WAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,WAAC,iBAAe,EAACf,UAAU;IAAA,EAAQ,EAC7D,KAAC,QAAQ;MACP,IAAI,EAAED,OAAQ;MACd,KAAK,EAAEc,MAAM,CAACG,GAAI;MAClB,UAAU,EAAG,CAAE;MACf,YAAY,EAAE,sBAACb,MAAM;QAAA,OAAKA,MAAM,CAACI,MAAM;MAAA,CAAC;MACxC,UAAU,EAAE,2BAAc;QAAA,IAAXE,IAAI,SAAJA,IAAI;QAEjB,OACI,KAAC,aAAa;UAAC,MAAM,EAAEA,IAAK;UAAC,KAAK,EAAEH,KAAK,CAACG,IAAI,CAACF,MAAM;QAAE,EAAG;MAEhE;IAAE,EACF;EAAA,EACG;AAEX,CAAC;AACD,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BH,KAAK,EAAE;IACLI,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE;EACd,CAAC;EACDP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE;EACT,CAAC;EACDP,GAAG,EAAC;IACFO,KAAK,EAAE;EAET;AACF,CAAC,CAAC;AACF,eAAezB,WAAW"},"metadata":{},"sourceType":"module"}