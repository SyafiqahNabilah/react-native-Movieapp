{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport createDataContext from \"./createDataContecxt\";\nvar url = 'http://www.omdbapi.com/?apikey=a091d52e';\nimport jsonServer from \"../api/jsonServer\";\nvar movieReducer = function movieReducer(state, action) {\n  switch (action.type) {\n    case 'get_blogposts':\n      return action.payload;\n    case 'add_blogpost':\n      return [].concat(_toConsumableArray(state), [{\n        id: Math.floor(Math.random() * 99999),\n        content: action.payload.content,\n        description: action.payload.description\n      }]);\n    case 'delete_blogpost':\n      return state.filter(function (blogPost) {\n        return blogPost.id !== action.payload;\n      });\n    case 'edit_blogpost':\n      return state.map(function (blogPost) {\n        return blogPost.id === action.payload.id ? action.payload : blogPost;\n      });\n    default:\n      return state;\n  }\n};\nvar getMovies = function getMovies(dispatch) {\n  return _asyncToGenerator(function* () {\n    var response = yield jsonServer.get('/movies');\n    console.log(\"response context\" + response.data);\n    dispatch({\n      type: 'get_blogposts',\n      payload: response.data\n    });\n  });\n};\nvar addMovie = function addMovie(dispatch) {\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (description, like, title, plot, callback) {\n      var res = yield jsonServer.post('/movies', {\n        description: description,\n        like: like,\n        title: title,\n        plot: plot\n      });\n      if (callback) {\n        callback();\n      }\n    });\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nvar deleteSavedMovie = function deleteSavedMovie(dispatch) {\n  return function () {\n    var _ref3 = _asyncToGenerator(function* (id) {\n      yield jsonServer.delete(\"/movies/\" + id);\n      dispatch({\n        type: 'delete_blogpost',\n        payload: id\n      });\n    });\n    return function (_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nvar editMovie = function editMovie(dispatch) {\n  return function () {\n    var _ref4 = _asyncToGenerator(function* (id, description, content, callback) {\n      yield jsonServer.put(\"/movies/\" + id, {\n        description: description,\n        content: content\n      });\n      dispatch({\n        type: 'edit_blogpost',\n        payload: {\n          id: id,\n          description: description,\n          content: content\n        }\n      });\n      if (callback) {\n        callback();\n      }\n    });\n    return function (_x7, _x8, _x9, _x10) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nvar _createDataContext = createDataContext(movieReducer, {\n    getMovies: getMovies,\n    addMovie: addMovie,\n    deleteSavedMovie: deleteSavedMovie,\n    editMovie: editMovie\n  }, []),\n  Context = _createDataContext.Context,\n  Provider = _createDataContext.Provider;\nexport { Context, Provider };","map":{"version":3,"names":["createDataContext","url","jsonServer","movieReducer","state","action","type","payload","id","Math","floor","random","content","description","filter","blogPost","map","getMovies","dispatch","response","get","console","log","data","addMovie","like","title","plot","callback","res","post","deleteSavedMovie","delete","editMovie","put","Context","Provider"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/context/movieContext.js"],"sourcesContent":["import createDataContext from './createDataContecxt';\r\nconst url =  'http://www.omdbapi.com/?apikey=a091d52e';\r\nimport jsonServer from '../api/jsonServer';\r\n\r\nconst movieReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'get_blogposts':\r\n      return action.payload;\r\n    case 'add_blogpost':\r\n      return [\r\n        ...state, \r\n        {\r\n            id: Math.floor(Math.random() * 99999), \r\n            content: action.payload.content,\r\n            description: action.payload.description\r\n        }];\r\n    case 'delete_blogpost':\r\n      return state.filter(blogPost => blogPost.id !== action.payload);\r\n    case 'edit_blogpost':\r\n      return state.map((blogPost) =>{\r\n        return blogPost.id === action.payload.id ? action.payload : blogPost;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst getMovies = dispatch => {\r\n  return async () => {\r\n    const response =  await jsonServer.get('/movies');\r\n    console.log(\"response context\" + response.data);\r\n    dispatch({type: 'get_blogposts', payload: response.data})\r\n  }\r\n}\r\n\r\nconst addMovie = dispatch => {\r\n    return async ( description, like, title, plot, callback) =>{\r\n      const res = await jsonServer.post('/movies', { description, like, title, plot});\r\n        // dispatch({ type: 'add_blogpost', payload: {id:id, description: description, content:content}});\r\n        if(callback){\r\n          callback();\r\n        }\r\n    };\r\n    \r\n  };\r\n  const deleteSavedMovie = (dispatch) => {\r\n    return async (id) => {\r\n      await jsonServer.delete(`/movies/${id}`)\r\n      dispatch({ type: 'delete_blogpost', payload: id });\r\n    };\r\n  };\r\n  const editMovie = (dispatch) => {\r\n    return async (id, description, content, callback) => {\r\n      await jsonServer.put(`/movies/${id}`, {description, content})\r\n      dispatch({\r\n        type: 'edit_blogpost',\r\n        payload: {id:id, description: description, content:content},\r\n      });\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    };\r\n  };\r\n// const deleteBlogPost = dispatch => {\r\n//     return async(id) => {\r\n//       await jsonServer.delete(`/blogposts/${id}`)\r\n//         dispatch({type: 'delete_blogpost', payload: id})\r\n//     }\r\n// }\r\n\r\n// const editBlogPost = dispatch => {\r\n//   return async (id, title, content, callback) =>{\r\n//     await jsonServer.put(`/blogposts/${id}`, {title, content})\r\n//     dispatch({\r\n//       type: 'edit_blogpost', \r\n//       payload: {id: id, title: title, content: content}});\r\n//       if(callback){\r\n//         callback();\r\n//       }\r\n//   }\r\n// }\r\n\r\n  export const {Context, Provider} = createDataContext(\r\n    movieReducer, \r\n    {getMovies,addMovie, deleteSavedMovie, editMovie}, \r\n    // {getMovies,addBlogPost, deleteBlogPost, editBlogPost}, \r\n    [\r\n      // {\"content\": {\"Actors\": \"Christian Bale, Michael Caine, Ken Watanabe\", \"Awards\": \"Nominated for 1 Oscar. 13 wins & 79 nominations total\", \"BoxOffice\": \"$206,863,479\", \"Country\": \"United States, United Kingdom\", \"DVD\": \"18 Oct 2005\", \"Director\": \"Christopher Nolan\", \"Genre\": \"Action, Crime, Drama\", \"Language\": \"English, Mandarin\", \"Metascore\": \"70\", \"Plot\": \"After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from corruption.\", \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOTY4YjI2N2MtYmFlMC00ZjcyLTg3YjEtMDQyM2ZjYzQ5YWFkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\", \"Production\": \"N/A\", \"Rated\": \"PG-13\", \"Ratings\": [Array], \"Released\": \"15 Jun 2005\", \"Response\": \"True\", \"Runtime\": \"140 min\", \"Title\": \"Batman Begins\", \"Type\": \"movie\", \"Website\": \"N/A\", \"Writer\": \"Bob Kane, David S. Goyer, Christopher Nolan\", \"Year\": \"2005\", \"imdbID\": \"tt0372784\", \"imdbRating\": \"8.2\", \"imdbVotes\": \"1,468,798\"}, \"description\": \"sedikit notes\", \"id\": 25306}\r\n    ]\r\n    );"],"mappings":"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"},"metadata":{},"sourceType":"module"}