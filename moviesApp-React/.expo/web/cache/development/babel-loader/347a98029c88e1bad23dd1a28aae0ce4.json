{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ResultsDetail from \"./ResultsDetails\";\nimport { Context } from \"../context/movieContext\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ResultsList = function ResultsList(_ref) {\n  var navigation = _ref.navigation,\n    results = _ref.results,\n    searchTerm = _ref.searchTerm,\n    filter = _ref.filter;\n  var _useContext = useContext(Context),\n    state = _useContext.state,\n    getMovies = _useContext.getMovies;\n  var _useContext2 = useContext(Context),\n    likeState = _useContext2.likeState,\n    setLikeState = _useContext2.setLikeState;\n  if (!results) {\n    return null;\n  }\n  useEffect(function () {\n    getMovies();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Search result: \", searchTerm]\n    }), _jsx(FlatList, {\n      data: results,\n      style: styles.row,\n      numColumns: 2,\n      keyExtractor: function keyExtractor(movies) {\n        return movies.imdbID;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ResultsDetail, {\n          result: item,\n          liked: state.find(function (movies) {\n            return movies.content.imdbID === item.imdbID;\n          })\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 14,\n    marginBottom: 5,\n    marginLeft: 5\n  },\n  container: {\n    flex: 2,\n    width: '100%'\n  },\n  row: {\n    width: '100%'\n  }\n});\nexport default ResultsList;","map":{"version":3,"names":["React","useContext","useEffect","ResultsDetail","Context","ResultsList","navigation","results","searchTerm","filter","state","getMovies","likeState","setLikeState","styles","container","title","row","movies","imdbID","item","find","content","StyleSheet","create","fontSize","marginBottom","marginLeft","flex","width"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/components/ResultsList.js"],"sourcesContent":["import React, {useContext, useEffect} from \"react\";\r\nimport { View, Text, FlatList, StyleSheet } from \"react-native\";\r\nimport ResultsDetail from \"./ResultsDetails\";\r\nimport { Context } from \"../context/movieContext\";\r\nconst ResultsList = ({ navigation, results, searchTerm, filter }) => {\r\n  const {state, getMovies} = useContext(Context)\r\n  const {likeState, setLikeState} = useContext(Context)\r\n  if (!results) {\r\n    return null;\r\n  }\r\n\r\n  useEffect(() =>{\r\n    getMovies();\r\n }, []);\r\n\r\n  // const movies = async (imdbID) =>{\r\n  //    const status = await state.find(\r\n  //     (movies) => movies.content.imdbID === imdbID\r\n  //     // return console.log(\"movies:\"+ movies.content.imdbID === results.imdbID);\r\n  //     // return console.log(\"movies:\"+ movies.content.imdbID +\" \"+imdbID);\r\n  //   );\r\n  //   return status\r\n  // } \r\n\r\n    // console.log(\"contetn:\" + movies);\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Search result: {searchTerm}</Text>\r\n      <FlatList\r\n        data={results}\r\n        style={styles.row}\r\n        numColumns= {2}\r\n        keyExtractor={(movies) => movies.imdbID}\r\n        renderItem={({ item }) => {\r\n          return (\r\n              <ResultsDetail result={item} liked={state.find(\r\n                (movies) => movies.content.imdbID === item.imdbID)} />\r\n          );\r\n        }}\r\n      /> \r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n    marginLeft: 5\r\n  },\r\n  container: {\r\n    flex: 2,\r\n    width: '100%',\r\n  },\r\n  row:{\r\n    width: '100%', \r\n    // alignContent: 'space-between'\r\n  }\r\n});\r\nexport default ResultsList;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAAC;AAAA;AAAA;AAAA;AAEnD,OAAOC,aAAa;AACpB,SAASC,OAAO;AAAkC;AAAA;AAClD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAoD;EAAA,IAA9CC,UAAU,QAAVA,UAAU;IAAEC,OAAO,QAAPA,OAAO;IAAEC,UAAU,QAAVA,UAAU;IAAEC,MAAM,QAANA,MAAM;EAC5D,kBAA2BR,UAAU,CAACG,OAAO,CAAC;IAAvCM,KAAK,eAALA,KAAK;IAAEC,SAAS,eAATA,SAAS;EACvB,mBAAkCV,UAAU,CAACG,OAAO,CAAC;IAA9CQ,SAAS,gBAATA,SAAS;IAAEC,YAAY,gBAAZA,YAAY;EAC9B,IAAI,CAACN,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEAL,SAAS,CAAC,YAAK;IACbS,SAAS,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAYL,OACE,MAAC,IAAI;IAAC,KAAK,EAAEG,MAAM,CAACC,SAAU;IAAA,WAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,WAAC,iBAAe,EAACR,UAAU;IAAA,EAAQ,EAC7D,KAAC,QAAQ;MACP,IAAI,EAAED,OAAQ;MACd,KAAK,EAAEO,MAAM,CAACG,GAAI;MAClB,UAAU,EAAG,CAAE;MACf,YAAY,EAAE,sBAACC,MAAM;QAAA,OAAKA,MAAM,CAACC,MAAM;MAAA,CAAC;MACxC,UAAU,EAAE,2BAAc;QAAA,IAAXC,IAAI,SAAJA,IAAI;QACjB,OACI,KAAC,aAAa;UAAC,MAAM,EAAEA,IAAK;UAAC,KAAK,EAAEV,KAAK,CAACW,IAAI,CAC5C,UAACH,MAAM;YAAA,OAAKA,MAAM,CAACI,OAAO,CAACH,MAAM,KAAKC,IAAI,CAACD,MAAM;UAAA;QAAE,EAAG;MAE9D;IAAE,EACF;EAAA,EACG;AAEX,CAAC;AACD,IAAML,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BR,KAAK,EAAE;IACLS,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE;EACd,CAAC;EACDZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE;EACT,CAAC;EACDZ,GAAG,EAAC;IACFY,KAAK,EAAE;EAET;AACF,CAAC,CAAC;AACF,eAAexB,WAAW"},"metadata":{},"sourceType":"module"}