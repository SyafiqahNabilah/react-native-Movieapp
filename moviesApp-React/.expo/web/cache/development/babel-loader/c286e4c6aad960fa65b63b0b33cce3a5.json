{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"../components/SearchBar\";\nimport ResultsList from \"../components/ResultsList\";\nimport { withNavigation } from \"react-navigation\";\nimport { Context } from \"../context/movieContext\";\nimport axios from \"axios\";\nimport fetchMovies from \"../api/omdb\";\nimport useResults from \"../hooks/useResults\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://www.omdbapi.com/?apikey=a091d52e\";\nvar IndexScreen = function IndexScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    term = _useState2[0],\n    setTerm = _useState2[1];\n  var _useResults = useResults(),\n    _useResults2 = _slicedToArray(_useResults, 3),\n    searchApi = _useResults2[0],\n    results = _useResults2[1],\n    errorMessage = _useResults2[2];\n  var filterResultsByType = function filterResultsByType(Type) {\n    return results.filter(function (result) {\n      return result.Type === Type;\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(SearchBar, {\n      style: styles.search,\n      term: term,\n      onTermChange: setTerm,\n      onTermSubmit: function onTermSubmit() {\n        return searchApi(term);\n      }\n    }), errorMessage ? _jsx(Text, {\n      children: errorMessage\n    }) : null, _jsx(ResultsList, {\n      results: results,\n      Title: \"Series\"\n    }), _jsx(Button, {\n      title: \"View Saved Movies\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Saved\");\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  resultList: {\n    marginBottom: 10\n  }\n});\nexport default withNavigation(IndexScreen);","map":{"version":3,"names":["React","useState","useContext","useEffect","SearchBar","ResultsList","withNavigation","Context","axios","fetchMovies","useResults","url","IndexScreen","navigation","term","setTerm","searchApi","results","errorMessage","filterResultsByType","Type","filter","result","styles","search","navigate","StyleSheet","create","resultList","marginBottom"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/screens/IndexScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ResultsList from \"../components/ResultsList\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport { Context } from \"../context/movieContext\";\r\nimport axios from \"axios\";\r\nimport fetchMovies from '../api/omdb';\r\nimport useResults from \"../hooks/useResults\";\r\nconst url = \"http://www.omdbapi.com/?apikey=a091d52e\";\r\n\r\nconst IndexScreen = ({ navigation }) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [searchApi, results, errorMessage] = useResults();\r\n\r\n  const filterResultsByType = (Type) => {\r\n    return results.filter((result) => {\r\n      return result.Type === Type;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <SearchBar style={styles.search}\r\n          term={term}\r\n          onTermChange={setTerm}\r\n          onTermSubmit={() => searchApi(term)}\r\n        />\r\n      {errorMessage ? <Text>{errorMessage}</Text> : null}\r\n      {/* <ScrollView> */}\r\n        {/* <ResultsList\r\n          results={filterResultsByType(\"movie\")}\r\n          Title=\"Movies\"\r\n          style={styles.resultList}\r\n        />\r\n        <ResultsList\r\n          results={filterResultsByType(\"series\")}\r\n          Title=\"Series\"\r\n          style={styles.resultList}\r\n        />\r\n        <ResultsList\r\n          results={filterResultsByType(\"episode\")}\r\n          Title=\"Series\"\r\n          style={styles.resultList}\r\n        /> */}\r\n          <ResultsList\r\n          results={results}\r\n          Title=\"Series\" />\r\n      {/* </ScrollView> */}\r\n\r\n      <Button\r\n        title=\"View Saved Movies\"\r\n        onPress={() => navigation.navigate(\"Saved\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  resultList: {\r\n    marginBottom: 10,\r\n  }\r\n});\r\n\r\nexport default withNavigation(IndexScreen);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAM/D,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO;AAChB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AAA4B;AAAA;AAAA;AAC7C,IAAMC,GAAG,GAAG,yCAAyC;AAErD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC/B,gBAAwBZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7Ba,IAAI;IAAEC,OAAO;EACpB,kBAA2CL,UAAU,EAAE;IAAA;IAAhDM,SAAS;IAAEC,OAAO;IAAEC,YAAY;EAEvC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,IAAI,EAAK;IACpC,OAAOH,OAAO,CAACI,MAAM,CAAC,UAACC,MAAM,EAAK;MAChC,OAAOA,MAAM,CAACF,IAAI,KAAKA,IAAI;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,OACE;IAAA,WACI,KAAC,SAAS;MAAC,KAAK,EAAEG,MAAM,CAACC,MAAO;MAC9B,IAAI,EAAEV,IAAK;MACX,YAAY,EAAEC,OAAQ;MACtB,YAAY,EAAE;QAAA,OAAMC,SAAS,CAACF,IAAI,CAAC;MAAA;IAAC,EACpC,EACHI,YAAY,GAAG,KAAC,IAAI;MAAA,UAAEA;IAAY,EAAQ,GAAG,IAAI,EAiB9C,KAAC,WAAW;MACZ,OAAO,EAAED,OAAQ;MACjB,KAAK,EAAC;IAAQ,EAAG,EAGrB,KAAC,MAAM;MACL,KAAK,EAAC,mBAAmB;MACzB,OAAO,EAAE;QAAA,OAAMJ,UAAU,CAACY,QAAQ,CAAC,OAAO,CAAC;MAAA;IAAC,EAC5C;EAAA,EACD;AAEP,CAAC;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BC,UAAU,EAAE;IACVC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAevB,cAAc,CAACM,WAAW,CAAC"},"metadata":{},"sourceType":"module"}