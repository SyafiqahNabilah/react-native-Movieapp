{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"../components/SearchBar\";\nimport ResultsList from \"../components/ResultsList\";\nimport { withNavigation } from \"react-navigation\";\nimport { Context } from \"../context/movieContext\";\nimport axios from \"axios\";\nimport fetchMovies from \"../api/omdb\";\nimport useResults from \"../hooks/useResults\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://www.omdbapi.com/?apikey=a091d52e\";\nvar IndexScreen = function IndexScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"Batman\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    term = _useState2[0],\n    setTerm = _useState2[1];\n  var _useContext = useContext(Context),\n    state = _useContext.state,\n    getMovies = _useContext.getMovies;\n  var _useResults = useResults(),\n    _useResults2 = _slicedToArray(_useResults, 3),\n    searchApi = _useResults2[0],\n    results = _useResults2[1],\n    errorMessage = _useResults2[2];\n  var getResult = function () {\n    var _ref2 = _asyncToGenerator(function* (title) {});\n    return function getResult(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getResult(term);\n    var listner = navigation.addListener(\"didFocus\", function () {\n      getResult(term);\n    });\n    return function () {\n      listner.remove();\n    };\n  }, []);\n  console.log(\"result:\" + results);\n  var filterResultsByType = function filterResultsByType(Type) {\n    return results.filter(function (state) {\n      return state.Type === Type;\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(SearchBar, {\n      style: styles.search,\n      term: term,\n      onTermChange: setTerm,\n      onTermSubmit: function onTermSubmit() {\n        return getResult(term);\n      }\n    }), _jsxs(ScrollView, {\n      children: [_jsx(ResultsList, {\n        results: filterResultsByType(\"movie\"),\n        Title: \"Movies\",\n        style: styles.resultList\n      }), _jsx(ResultsList, {\n        results: filterResultsByType(\"series\"),\n        Title: \"Series\",\n        style: styles.resultList\n      }), _jsx(ResultsList, {\n        results: filterResultsByType(\"episode\"),\n        Title: \"Series\",\n        style: styles.resultList\n      })]\n    }), _jsx(Button, {\n      title: \"View Saved Movies\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Saved\");\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  resultList: {\n    marginBottom: 10\n  }\n});\nexport default withNavigation(IndexScreen);","map":{"version":3,"names":["React","useState","useContext","useEffect","SearchBar","ResultsList","withNavigation","Context","axios","fetchMovies","useResults","url","IndexScreen","navigation","term","setTerm","state","getMovies","searchApi","results","errorMessage","getResult","title","listner","addListener","remove","console","log","filterResultsByType","Type","filter","styles","search","resultList","navigate","StyleSheet","create","marginBottom"],"sources":["C:/Users/User/Documents/Internship/Training/React Native/moviesApp-React/src/screens/IndexScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  StyleSheet,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ResultsList from \"../components/ResultsList\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport { Context } from \"../context/movieContext\";\r\nimport axios from \"axios\";\r\nimport fetchMovies from '../api/omdb';\r\nimport useResults from \"../hooks/useResults\";\r\nconst url = \"http://www.omdbapi.com/?apikey=a091d52e\";\r\n\r\nconst IndexScreen = ({ navigation }) => {\r\n  const [term, setTerm] = useState(\"Batman\");\r\n  const { state, getMovies } = useContext(Context); //Pass value from context to index\r\n  // const [result, setResult] = useState([]);\r\n  const [searchApi, results, errorMessage] = useResults();\r\n\r\n  const getResult = async (title) => {\r\n    // const response = await axios.get(`${url}&s=${title}`);\r\n    // const response = fetchMovies(title);\r\n    // setResult(response.data.Search);\r\n    // setResult(response);\r\n  };\r\n  useEffect(() => {\r\n    getResult(term);\r\n    // setResult(fetchMovies(term));\r\n\r\n    //fetch again when back again\r\n    const listner = navigation.addListener(\"didFocus\", () => {\r\n      getResult(term);\r\n    });\r\n\r\n    return () => {\r\n      listner.remove();\r\n    };\r\n  }, []);\r\n  console.log(\"result:\" +results);\r\n  const filterResultsByType = (Type) => {\r\n    return results.filter((state) => {\r\n      return state.Type === Type;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <SearchBar style={styles.search}\r\n          term={term}\r\n          onTermChange={setTerm}\r\n          onTermSubmit={() => getResult(term)}\r\n        />\r\n\r\n      <ScrollView>\r\n        <ResultsList\r\n          results={filterResultsByType(\"movie\")}\r\n          Title=\"Movies\"\r\n          style={styles.resultList}\r\n        />\r\n        <ResultsList\r\n          results={filterResultsByType(\"series\")}\r\n          Title=\"Series\"\r\n          style={styles.resultList}\r\n        />\r\n        <ResultsList\r\n          results={filterResultsByType(\"episode\")}\r\n          Title=\"Series\"\r\n          style={styles.resultList}\r\n        />\r\n      </ScrollView>\r\n\r\n      <Button\r\n        title=\"View Saved Movies\"\r\n        onPress={() => navigation.navigate(\"Saved\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  resultList: {\r\n    marginBottom: 10,\r\n  }\r\n});\r\n\r\nexport default withNavigation(IndexScreen);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAM/D,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO;AAChB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AAA4B;AAAA;AAAA;AAC7C,IAAMC,GAAG,GAAG,yCAAyC;AAErD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC/B,gBAAwBZ,QAAQ,CAAC,QAAQ,CAAC;IAAA;IAAnCa,IAAI;IAAEC,OAAO;EACpB,kBAA6Bb,UAAU,CAACK,OAAO,CAAC;IAAxCS,KAAK,eAALA,KAAK;IAAEC,SAAS,eAATA,SAAS;EAExB,kBAA2CP,UAAU,EAAE;IAAA;IAAhDQ,SAAS;IAAEC,OAAO;IAAEC,YAAY;EAEvC,IAAMC,SAAS;IAAA,8BAAG,WAAOC,KAAK,EAAK,CAKnC,CAAC;IAAA,gBALKD,SAAS;MAAA;IAAA;EAAA,GAKd;EACDlB,SAAS,CAAC,YAAM;IACdkB,SAAS,CAACP,IAAI,CAAC;IAIf,IAAMS,OAAO,GAAGV,UAAU,CAACW,WAAW,CAAC,UAAU,EAAE,YAAM;MACvDH,SAAS,CAACP,IAAI,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO,YAAM;MACXS,OAAO,CAACE,MAAM,EAAE;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAER,OAAO,CAAC;EAC/B,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,IAAI,EAAK;IACpC,OAAOV,OAAO,CAACW,MAAM,CAAC,UAACd,KAAK,EAAK;MAC/B,OAAOA,KAAK,CAACa,IAAI,KAAKA,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,OACE;IAAA,WACI,KAAC,SAAS;MAAC,KAAK,EAAEE,MAAM,CAACC,MAAO;MAC9B,IAAI,EAAElB,IAAK;MACX,YAAY,EAAEC,OAAQ;MACtB,YAAY,EAAE;QAAA,OAAMM,SAAS,CAACP,IAAI,CAAC;MAAA;IAAC,EACpC,EAEJ,MAAC,UAAU;MAAA,WACT,KAAC,WAAW;QACV,OAAO,EAAEc,mBAAmB,CAAC,OAAO,CAAE;QACtC,KAAK,EAAC,QAAQ;QACd,KAAK,EAAEG,MAAM,CAACE;MAAW,EACzB,EACF,KAAC,WAAW;QACV,OAAO,EAAEL,mBAAmB,CAAC,QAAQ,CAAE;QACvC,KAAK,EAAC,QAAQ;QACd,KAAK,EAAEG,MAAM,CAACE;MAAW,EACzB,EACF,KAAC,WAAW;QACV,OAAO,EAAEL,mBAAmB,CAAC,SAAS,CAAE;QACxC,KAAK,EAAC,QAAQ;QACd,KAAK,EAAEG,MAAM,CAACE;MAAW,EACzB;IAAA,EACS,EAEb,KAAC,MAAM;MACL,KAAK,EAAC,mBAAmB;MACzB,OAAO,EAAE;QAAA,OAAMpB,UAAU,CAACqB,QAAQ,CAAC,OAAO,CAAC;MAAA;IAAC,EAC5C;EAAA,EACD;AAEP,CAAC;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BH,UAAU,EAAE;IACVI,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe/B,cAAc,CAACM,WAAW,CAAC"},"metadata":{},"sourceType":"module"}